FROM quay.io/ascend/cann:8.2.rc1.alpha003-a3-ubuntu22.04-py3.11

WORKDIR /workspace

# Define environments
ENV DEBIAN_FRONTEND=noninteractive

# Update pip & apt sources
ARG PIP_INDEX_URL="https://pypi.org/simple/"
RUN pip config set global.index-url $PIP_INDEX_URL

ARG APTMIRROR=""
RUN if [ -n "$APTMIRROR" ];then sed -i "s|.*.ubuntu.com|$APTMIRROR|g" /etc/apt/sources.list ;fi

# Install development tools and utilities
RUN apt-get update -y && apt-get install -y \
    build-essential \
    cmake \
    vim \
    wget \
    curl \
    net-tools \
    zlib1g-dev \
    lld \
    clang \
    locales \
    ccache \
    ca-certificates \
    && rm -rf /var/cache/apt/* \
    && rm -rf /var/lib/apt/lists/*

# Update cert
RUN update-ca-certificates

# Install basic python packages
RUN python3 -m pip install --no-cache-dir \
    numpy==1.26.7 \
    pybind11==2.11.1

# Set up locale
RUN locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Install MemFabric
ARG MEMFABRIC_URL=https://sglang-ascend.obs.cn-east-3.myhuaweicloud.com:443/sglang/mf_adapter-1.0.0-cp311-cp311-linux_aarch64.whl?AccessKeyId=HPUAXT4YM0U8JNTERLST&Expires=1783151861&Signature=3j10QDUjqk70enaq8lostYV2bEA%3D
RUN wget -O mf_adapter-1.0.0-cp311-cp311-linux_aarch64.whl $MEMFABRIC_URL && \
     pip install mf_adapter-1.0.0-cp311-cp311-linux_aarch64.whl --no-cache-dir

# Install PyTorch and NPU adapter
ARG PYTORCH_VERSION=2.6.0
ARG TORCHVISION_VERSION=0.21.0
RUN pip install torch==$PYTORCH_VERSION torchvision==$TORCHVISION_VERSION --index-url https://download.pytorch.org/whl/cpu --no-cache-dir
RUN pip install torch-npu==$PYTORCH_VERSION --no-cache-dir

# Install vLLM
ARG VLLM_TAG=v0.8.5
RUN git clone --depth 1 https://github.com/vllm-project/vllm.git --branch $VLLM_TAG && \
    cd vllm && VLLM_TARGET_DEVICE="empty" pip install -v . --no-cache-dir

# Install Triton-Ascend
ARG TRITON_ASCEND_VERSION=3.2.0rc2
RUN pip install triton-ascend==$TRITON_ASCEND_VERSION --no-cache-dir

# Install SGLang
ARG SGLANG_TAG=main
RUN git clone https://github.com/sgl-project/sglang --branch $SGLANG_TAG && \
    cd ./sglang/python && pip install .[srt_npu] --no-cache-dir

# Install Deep-ep
ARG ASCEND_CANN_PATH=/usr/local/Ascend/ascend-toolkit
RUN git clone https://github.com/sgl-project/sgl-kernel-npu.git
ENV LD_LIBRARY_PATH=${ASCEND_CANN_PATH}/latest/runtime/lib64/stub:$LD_LIBRARY_PATH
RUN source ${ASCEND_CANN_PATH}/set_env.sh && cd sgl-kernel-npu && bash build.sh
RUN pip install sgl-kernel-npu/output/deep_ep*.whl --no-cache-dir
RUN cd "$(pip show deep-ep | awk '/^Location:/ {print $2}')" && ln -s deep_ep/deep_ep_cpp*.so

CMD ["/bin/bash"]
