FROM quay.io/ascend/cann:8.2.rc1.alpha003-a3-ubuntu22.04-py3.11

WORKDIR /workspace

# Define environments
ENV DEBIAN_FRONTEND=noninteractive

# Update pip & apt sources
ARG PIP_INDEX_URL="https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"
RUN pip config set global.index-url $PIP_INDEX_URL

RUN sed -i 's|http://.*.ubuntu.com|https://mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
RUN cat /etc/apt/sources.list

# Install development tools and utilities
RUN apt-get update -y && apt-get install -y \
    build-essential \
    cmake \
    vim \
    wget \
    curl \
    net-tools \
    zlib1g-dev \
    lld \
    clang \
    locales \
    ccache \
    && rm -rf /var/cache/apt/* \
    && rm -rf /var/lib/apt/lists/*

# Install cert and update
RUN apt-get install -y ca-certificates && \
    update-ca-certificates

# Set up locale
RUN locale-gen en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Install MemFabric
ARG MEMFABRIC_URL=https://sglang-ascend.obs.cn-east-3.myhuaweicloud.com:443/sglang/mf_adapter-1.0.0-cp311-cp311-linux_aarch64.whl?AccessKeyId=HPUAXT4YM0U8JNTERLST&Expires=1783151861&Signature=3j10QDUjqk70enaq8lostYV2bEA%3D
RUN wget --no-check-certificate -O mf_adapter-1.0.0-cp311-cp311-linux_aarch64.whl $MEMFABRIC_URL && \
     pip install mf_adapter-1.0.0-cp311-cp311-linux_aarch64.whl

# Install PyTorch and PTA
ARG PYTORCH_VERSION=2.6.0
ARG TORCHVISION_VERSION=0.21.0
ARG PTA_URL=https://gitee.com/ascend/pytorch/releases/download/v7.1.0-pytorch2.6.0/torch_npu-2.6.0-cp311-cp311-manylinux_2_28_aarch64.whl
RUN pip install torch==$PYTORCH_VERSION torchvision==$TORCHVISION_VERSION --index-url https://download.pytorch.org/whl/cpu
RUN wget --no-check-certificate -O torch_npu-2.6.0-cp311-cp311-manylinux_2_28_aarch64.whl $PTA_URL
RUN pip install torch_npu-2.6.0-cp311-cp311-manylinux_2_28_aarch64.whl

# Install vLLM
ARG VLLM_TAG=v0.8.5
RUN GIT_SSL_NO_VERIFY=true git clone --depth 1 https://github.com/vllm-project/vllm.git --branch $VLLM_TAG && \
    cd vllm && VLLM_TARGET_DEVICE="empty" pip install -v -e .

# Install Triton-Ascend
ARG TRITON_ASCEND_VERSION=3.2.0rc2
RUN pip install triton-ascend==$TRITON_ASCEND_VERSION

# Install SGLang
RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/sgl-project/sglang && \
    cd sglang && pip install -e "python[srt_npu]"

LABEL \
    org.opencontainers.image.title="sglang-ascend" \
    org.opencontainers.image.description="A SGLang image for Ascend backend." \
    org.opencontainers.image.version="1.0.0" \
    org.opencontainers.image.licenses="MIT"

CMD ["/bin/bash"]
